from random import randint
from typing import List
from pytest import mark

from challenges.msort.msort import ListElement, merge_sort, merge_sort_mp


@mark.parametrize(
    ["unsorted", "expected_sorted"],
    [
        ([3, 6, 4, 1, 9], [1, 3, 4, 6, 9]),
        (
            [
                2,
                22,
                17,
                25,
                7,
                20,
                5,
                16,
                29,
                5,
                22,
                26,
                5,
                26,
                13,
                28,
                8,
                16,
                6,
                7,
                23,
                16,
                30,
                6,
                6,
                29,
                1,
                26,
                24,
                24,
            ],
            [
                1,
                2,
                5,
                5,
                5,
                6,
                6,
                6,
                7,
                7,
                8,
                13,
                16,
                16,
                16,
                17,
                20,
                22,
                22,
                23,
                24,
                24,
                25,
                26,
                26,
                26,
                28,
                29,
                29,
                30,
            ],
        ),
    ],
)
def test_merge_sort(unsorted, expected_sorted):
    assert merge_sort(unsorted) == expected_sorted


def test_merge_sort_extended():
    size = 100
    unsorted: List[ListElement] = [int(randint(1, size)) for _ in range(size)]
    expected_sorted = sorted(unsorted)
    assert merge_sort(unsorted) == expected_sorted


@mark.parametrize(
    ["unsorted", "expected_sorted"],
    [
        ([3, 6, 4, 1, 9], [1, 3, 4, 6, 9]),
        (
            [
                2,
                22,
                17,
                25,
                7,
                20,
                5,
                16,
                29,
                5,
                22,
                26,
                5,
                26,
                13,
                28,
                8,
                16,
                6,
                7,
                23,
                16,
                30,
                6,
                6,
                29,
                1,
                26,
                24,
                24,
            ],
            [
                1,
                2,
                5,
                5,
                5,
                6,
                6,
                6,
                7,
                7,
                8,
                13,
                16,
                16,
                16,
                17,
                20,
                22,
                22,
                23,
                24,
                24,
                25,
                26,
                26,
                26,
                28,
                29,
                29,
                30,
            ],
        ),
    ],
)
def test_merge_sort_mp(unsorted, expected_sorted):
    assert (
        merge_sort_mp(unsorted, multiprocessing_threshold=len(unsorted) // 2)
        == expected_sorted
    )


def test_merge_sort_mp_extended():
    unsorted: List[ListElement] = [
        29,
        59,
        74,
        92,
        85,
        80,
        81,
        93,
        31,
        31,
        89,
        9,
        12,
        25,
        99,
        48,
        67,
        97,
        30,
        72,
        78,
        78,
        78,
        14,
        83,
        33,
        53,
        31,
        16,
        71,
        57,
        46,
        21,
        69,
        29,
        34,
        60,
        51,
        26,
        1,
        8,
        7,
        50,
        40,
        5,
        67,
        29,
        25,
        86,
        24,
        32,
        98,
        12,
        47,
        96,
        33,
        41,
        9,
        20,
        13,
        55,
        92,
        17,
        94,
        14,
        46,
        55,
        31,
        98,
        60,
        56,
        63,
        49,
        66,
        89,
        91,
        65,
        83,
        71,
        92,
        12,
        35,
        24,
        4,
        37,
        76,
        48,
        30,
        31,
        99,
        98,
        99,
        17,
        13,
        81,
        91,
        45,
        18,
        99,
        99,
    ]
    expected_sorted = sorted(unsorted)

    assert merge_sort_mp(unsorted, multiprocessing_threshold=25) == expected_sorted
